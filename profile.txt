# Evermark Profile System - Future Feature Planning

## Vision
Profile-as-NFT system where user identities are minted as NFTs with updateable metadata via updateURI(). This provides provenance, portability, and composability for user identities across the Evermark ecosystem.

## Core Concept
- Mint profile NFT on first profile creation
- Use updateURI() to evolve profile metadata over time
- Store profile data on IPFS with onchain reference
- Enable other contracts to reference profile NFTs
- Potential for profile trading/transfer

## Architecture Questions

### Contract Design
- Should profiles be free to mint or cost-gated?
- One profile per address, or allow multiple profiles?
- Should profile NFTs be transferable or soulbound?
- What happens to profile references if NFT is transferred?

### Metadata Schema
- What core profile fields do we need? (name, bio, PFP, social links?)
- Should we track onchain stats as metadata attributes?
- How do we handle profile pic storage? (IPFS, Arweave, other?)
- Version control for profile updates?

### Integration Points
- How do existing contracts reference profiles?
- Should voting/staking power be tied to profile reputation?
- Profile verification system needed?
- Integration with ENS or other identity systems?

### User Experience
- Profile creation flow and onboarding
- Profile editing interface and metadata updates
- Default avatars and fallback systems
- Profile discovery and social features

### Technical Considerations
- Gas costs for profile updates
- IPFS pinning strategy for profile data
- Caching profile data in frontend
- Profile resolution performance

### Monetization & Features
- Premium profile features
- Profile marketplace for rare/historical profiles
- Reputation system tied to Evermark activity
- Profile badges/achievements

## Current State
- Basic wallet connection exists
- User Evermark collections are tracked
- No dedicated profile pages or PFP system
- Identity currently just wallet addresses

## Next Steps (When Ready)
1. Design profile metadata schema
2. Write ProfileNFT contract
3. Build profile creation/editing UI
4. Integrate profile display throughout app
5. Add social features and discovery

## Notes
- Consider this for post-MVP launch
- Focus on core Evermark functionality first
- Revisit when user base grows and identity becomes important
- Could be a major feature release with its own tokenomics